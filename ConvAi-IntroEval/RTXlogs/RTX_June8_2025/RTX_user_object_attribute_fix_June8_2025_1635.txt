"""
RTX Log - User Object Attribute Access Bug Fix

CHANGE DETAILS:
--------------
Modified main.py: Fixed 'User' object has no attribute 'get' error in transcribe endpoint

BEFORE:
------
# PROBLEMATIC CODE:
log_info(f"üì§ Frontend transcribe request: {file.filename} (user: {current_user.get('username', 'unknown')})")

# Extract user information for file organization
roll_number = current_user.get("roll_number") if current_user.get("user_type") == "student" else None
user_info = f"roll: {roll_number}" if roll_number else f"teacher: {current_user.get('username', 'unknown')}"

# TYPE ANNOTATION:
current_user: dict = Depends(get_current_user)

AFTER:
-----
# FIXED CODE:
log_info(f"üì§ Frontend transcribe request: {file.filename} (user: {current_user.username if current_user else 'unknown'})")

# Extract user information for file organization  
roll_number = current_user.roll_number if current_user and hasattr(current_user, 'roll_number') else None
user_info = f"roll: {roll_number}" if roll_number else f"teacher: {current_user.username if current_user else 'unknown'}"

# FIXED TYPE ANNOTATION:
from typing import Dict, List, Optional, Union
current_user: Optional[Union[User, Teacher]] = Depends(get_current_user)

# FIXED DOCSTRING SYNTAX:
    \"\"\"
    try:  # (removed extra spaces)

ERROR RESOLVED:
--------------
[2025-06-08 16:30:44] ERROR: ‚ùå Transcription endpoint failed
[2025-06-08 16:30:44] ERROR DETAILS: 'User' object has no attribute 'get'
AttributeError: 'User' object has no attribute 'get'

ROOT CAUSE:
----------
The get_current_user() function returns User or Teacher SQLAlchemy model instances, not dictionaries. 
The code was incorrectly using .get() method (dictionary method) on User/Teacher objects.

PURPOSE:
-------
- Fix runtime AttributeError when users try to use /transcribe endpoint
- Correctly access User/Teacher model attributes using dot notation
- Add proper type annotations for better code clarity and IDE support
- Use hasattr() for safe attribute checking on optional roll_number field
- Ensure backward compatibility with both User and Teacher objects
- Fix syntax error in docstring formatting

RELATED COMPONENTS:
-----------------
- models.py: Defines User and Teacher SQLAlchemy models with username/roll_number attributes
- auth.py: get_current_user() returns User or Teacher objects, not dictionaries
- Type system: Updated imports to include Union for proper typing
- All endpoints using current_user parameter now have correct attribute access

VALIDATION:
----------
‚úÖ Syntax errors resolved (docstring formatting fixed)
‚úÖ Type annotations updated to reflect actual return types
‚úÖ User object attribute access corrected throughout
‚úÖ No more .get() method calls on User/Teacher objects
‚úÖ Safe attribute checking with hasattr() for optional fields
‚úÖ Backward compatibility maintained for both User and Teacher objects

IMPACT:
------
- /transcribe endpoint now works without AttributeError
- User authentication and file organization functioning correctly
- Improved code maintainability with proper type annotations
- Better error handling for optional attributes
"""
